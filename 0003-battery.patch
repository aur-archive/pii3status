Index: i3status-2.6/src/print_battery_info.c
===================================================================
--- i3status-2.6.orig/src/print_battery_info.c
+++ i3status-2.6/src/print_battery_info.c
@@ -36,6 +36,7 @@ void print_battery_info(yajl_gen json_ge
         char buf[1024];
         char statusbuf[16];
         char percentagebuf[16];
+        char altering_percentagebuf[16];
         char remainingbuf[256];
         char emptytimebuf[256];
         char consumptionbuf[256];
@@ -44,6 +45,7 @@ void print_battery_info(yajl_gen json_ge
         bool watt_as_unit;
         bool colorful_output;
         int full_design = -1,
+            altering_full = -1,
             remaining = -1,
             present_rate = -1,
             voltage = -1;
@@ -51,6 +53,7 @@ void print_battery_info(yajl_gen json_ge
 
         memset(statusbuf, '\0', sizeof(statusbuf));
         memset(percentagebuf, '\0', sizeof(percentagebuf));
+        memset(altering_percentagebuf, '\0', sizeof(altering_percentagebuf));
         memset(remainingbuf, '\0', sizeof(remainingbuf));
         memset(emptytimebuf, '\0', sizeof(emptytimebuf));
         memset(consumptionbuf, '\0', sizeof(consumptionbuf));
@@ -96,19 +99,15 @@ void print_battery_info(yajl_gen json_ge
                         status = CS_CHARGING;
                 else if (BEGINS_WITH(last, "POWER_SUPPLY_STATUS=Full"))
                         status = CS_FULL;
-                else {
-                        /* The only thing left is the full capacity */
-                        if (last_full_capacity) {
-                                if (!BEGINS_WITH(last, "POWER_SUPPLY_ENERGY_FULL") &&
-                                    !BEGINS_WITH(last, "POWER_SUPPLY_CHARGE_FULL"))
-                                        continue;
-                        } else {
-                                if (!BEGINS_WITH(last, "POWER_SUPPLY_CHARGE_FULL_DESIGN") &&
-                                    !BEGINS_WITH(last, "POWER_SUPPLY_ENERGY_FULL_DESIGN"))
-                                        continue;
-                        }
-
+                else if (BEGINS_WITH(last, "POWER_SUPPLY_CHARGE_FULL_DESIGN"))
                         full_design = atoi(walk+1);
+                else if (BEGINS_WITH(last, "POWER_SUPPLY_ENERGY_FULL_DESIGN"))
+                        full_design = atoi(walk+1);
+                else if (BEGINS_WITH(last, "POWER_SUPPLY_CHARGE_FULL"))
+                        altering_full = atoi(walk+1);
+                else if (BEGINS_WITH(last, "POWER_SUPPLY_ENERGY_FULL"))
+                        altering_full = atoi(walk+1);
+                else {
                 }
         }
 
@@ -120,6 +119,7 @@ void print_battery_info(yajl_gen json_ge
             present_rate = (((float)voltage / 1000.0) * ((float)present_rate / 1000.0));
             remaining = (((float)voltage / 1000.0) * ((float)remaining / 1000.0));
             full_design = (((float)voltage / 1000.0) * ((float)full_design / 1000.0));
+            altering_full = (((float)voltage / 1000.0) * ((float)altering_full / 1000.0));
         }
 
         if ((full_design == -1) || (remaining == -1)) {
@@ -132,6 +132,9 @@ void print_battery_info(yajl_gen json_ge
         float percentage_remaining = (((float)remaining / (float)full_design) * 100);
         (void)snprintf(percentagebuf, sizeof(percentagebuf), "%.02f%%", percentage_remaining);
 
+        float altering_percentage_remaining = (((float)remaining / (float)altering_full) * 100);
+        (void)snprintf(altering_percentagebuf, sizeof(altering_percentagebuf), "%.02f%%", altering_percentage_remaining);
+
         if (present_rate > 0) {
                 float remaining_time;
                 int seconds, hours, minutes, seconds_remaining;
@@ -293,6 +296,9 @@ void print_battery_info(yajl_gen json_ge
                 } else if (strncmp(walk+1, "percentage", strlen("percentage")) == 0) {
                         outwalk += sprintf(outwalk, "%s", percentagebuf);
                         walk += strlen("percentage");
+                } else if (strncmp(walk+1, "altering_percentage", strlen("altering_percentage")) == 0) {
+                        outwalk += sprintf(outwalk, "%s", altering_percentagebuf);
+                        walk += strlen("altering_percentage");
                 } else if (strncmp(walk+1, "remaining", strlen("remaining")) == 0) {
                         outwalk += sprintf(outwalk, "%s", remainingbuf);
                         walk += strlen("remaining");
